name: Service release pipeline

on:
  push:
    tags:
      - v*.*
  workflow_dispatch: {}

jobs:
  check-image-exists:

    name: Check that image ${{ matrix.service }}:${{ github.sha }} exists
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        service:
          - vmst
          - islandis
    environment: shared
    steps:
      - name: Configure AWS credentials for shared account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Check if image exists
        run: aws ecr describe-images --repository-name=${{ matrix.service }} --image-ids=imageTag=${{ github.sha }}

  deploy-staging:
    name: Deploy ${{ github.sha }} to staging
    runs-on: ubuntu-20.04
    needs: check-image-exists
    environment: staging
    env:
      ENVIRONMENT: staging
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Install tfenv
        run: |
          git clone https://github.com/tfutils/tfenv.git ~/.tfenv
          echo $HOME/.tfenv/bin >> $GITHUB_PATH
      - name: Deploy islandis
        run: |
          COMMIT_MSG=$(./infra/set-image-tag.sh -e $ENVIRONMENT -t ${{ github.sha }} --deploy --sub islandis)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
      - name: Commit islandis
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.COMMIT_MSG }}
      - name: Deploy vmst
        run: |
          COMMIT_MSG=$(./infra/set-image-tag.sh -e $ENVIRONMENT -t ${{ github.sha }} --deploy --sub vmst)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
      - name: Commit vmst
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.COMMIT_MSG }}

      - name: Wait for islandis to stabilize
        run: aws ecs wait services-stable --cluster=island-islandis-$ENVIRONMENT --services=islandis-$ENVIRONMENT
      - name: Wait for vmst to stabilize
        run: aws ecs wait services-stable --cluster=island-vmst-$ENVIRONMENT --services=vmst-$ENVIRONMENT

  deploy-prod:
    name: Deploy ${{ github.sha }} to prod
    runs-on: ubuntu-20.04
    needs: deploy-staging
    environment: prod
    env:
      ENVIRONMENT: prod
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Install tfenv
        run: |
          git clone https://github.com/tfutils/tfenv.git ~/.tfenv
          echo $HOME/.tfenv/bin >> $GITHUB_PATH
      - name: Deploy islandis
        run: |
          COMMIT_MSG=$(./infra/set-image-tag.sh -e $ENVIRONMENT -t ${{ github.sha }} --deploy --sub islandis)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
      - name: Commit islandis
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.COMMIT_MSG }}
      - name: Deploy vmst
        run: |
          COMMIT_MSG=$(./infra/set-image-tag.sh -e $ENVIRONMENT -t ${{ github.sha }} --deploy --sub vmst)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
      - name: Commit vmst
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.COMMIT_MSG }}

      - name: Wait for islandis to stabilize
        run: aws ecs wait services-stable --cluster=island-islandis-$ENVIRONMENT --services=islandis-$ENVIRONMENT --region=eu-west-2
      - name: Wait for vmst to stabilize
        run: aws ecs wait services-stable --cluster=island-vmst-$ENVIRONMENT --services=vmst-$ENVIRONMENT