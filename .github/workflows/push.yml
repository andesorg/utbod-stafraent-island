name: Build and deploy pipeline

on:
  push:
    branches:
      - "master"
    tags:
      - docker-build-*
  workflow_dispatch: {}

env:
  DOCKER_REGISTRY: 596808618898.dkr.ecr.eu-west-1.amazonaws.com

jobs:
  docker-build:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    strategy:
      matrix:
        service:
          - vmst
          - islandis

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push server
        uses: docker/build-push-action@v2
        with:
          file: apps/Dockerfile
          context: apps
          build-args: |
            APP_PATH=${{ matrix.service }}
          target: runner
          push: true
          tags: "${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:${{ github.sha }},${{ env.DOCKER_REGISTRY }}/${{ matrix.service }}:latest"

  deploy-dev:
    runs-on: ubuntu-20.04
    environment: dev
    needs:
      - docker-build
    strategy:
      matrix:
        service:
          - vmst
          - islandis

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Restart ecs service
        run: aws ecs update-service --cluster=island-dev --service=${{ matrix.service }}-dev --force-new-deployment

      - name: Wait for service to stabilize
        run: aws ecs wait services-stable --cluster=island-dev --services=${{ matrix.service }}-dev
